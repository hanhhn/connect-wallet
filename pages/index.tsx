import Head from "next/head";
import { useCallback, useEffect, useMemo, useState } from "react";
import chainList from "../common/constants";
import {
  alreadyConnected,
  connectMetamask,
  getChainId,
  getProvider,
  onChainIdChange,
} from "../libs/web3";
import styles from "../styles/Home.module.css";

export default function Home() {
  const [account, setAccount] = useState("");
  const [chainId, setChainId] = useState(0);
  const [error, setError] = useState("");

  useEffect(() => {
    alreadyConnected()
      .then((address) => {
        setAccount(address);
      })
      .catch((error) => {
        setError(error);
      });

    getChainId()
      .then((chainId) => {
        setChainId(chainId);
      })
      .catch((err) => {
        setError(err);
      });

    //listen chainId change
    onChainIdChange((chainId) => {
      setChainId(chainId);
    });

  }, []);

  const handleConnectMetamask = useCallback(() => {
    connectMetamask()
      .then((account) => {
        setAccount(account);
      })
      .catch((err) => {
        setError(err);
      });
  }, []);

  const networkInfo = useMemo(() => {
    const chain = (chainList as any)[chainId];
    if (chain) {
      return (
        <h5>
          ChainId: {chainId}, ChainName: {chain.chainName}
        </h5>
      );
    }
  }, [chainId]);

  const buttons = useMemo(() => {
    if (!getProvider()) {
      return;
    }

    if (!account) {
      return (
        <button className={styles.btn} onClick={handleConnectMetamask}>
          <span>Connect wallet</span>
        </button>
      );
    } else {
      return (
        <button className={styles.btn}>
          <span>Wallet connected</span>
        </button>
      );
    }
  }, [account, handleConnectMetamask]);

  return (
    <div className={styles.container}>
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <main className={styles.main}>
        <h1 className={styles.title}>Connect wallet & switch network</h1>

        <div className={styles.description}>
          {error && <p className={styles.error}>{error}</p>}

          {/* render button */}
          {buttons}

          {account && <h5>Your account address: {account}</h5>}

          {/* render chain info */}
          {networkInfo}
        </div>
      </main>
    </div>
  );
}
